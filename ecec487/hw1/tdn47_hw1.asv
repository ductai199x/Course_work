%% Tai Duc Nguyen - HW1 - 09/30/2019

clear; close all;

%% HW CX 2.7

% Prepare the variables:
N = 10000;

m1 = [1;1];
m2 = [4;4];
m3 = [8;1];
m = [m1 m2 m3];

S1 = eye(2)*2;
S2 = S1;
S3 = S1;
S(:,:,1) = S1; S(:,:,2) = S2; S(:,:,3) = S3;

P_x5 = [1/3;1/3;1/3];
P_x5_ = [0.8;0.1;0.1];

% Generate data set x5 and x5_ and class assignments y5 and y5_
[X5, y5] = generate_gauss_classes(m, S, P_x5, N);
[X5_, y5_] = generate_gauss_classes(m, S, P_x5_, N);

z5 = bayes_classifier(m,S,P_x5,X5)



%% Using the data generation procedures from textbook CX 2.3 Page 80 with slight modification
function [X,y] = generate_gauss_classes(m,S,P,N)
[~,c]=size(m);
X=[];
y=[];
    for j=1:c
        % Generating the [p(j)*N)] vectors from each distribution
        t=mvnrnd(m(:,j),S(:,:,j),fix(P(j)*N));
        % The total number of points may be slightly less than N
        % due to the fix operator
        X=[X; t];
        y=[y ones(1,fix(P(j)*N))*j];
    end
end


%% Using the Bayes classifier algorithm from textbook CX 2.5 Page 81 with slight modification
function z = bayes_classifier(m,S,P,X)
    [~,c]=size(m); % c=no. of classes
    [~,N]=size(X); % l=no. of dimensions, N=no. of vectors
    for i=1:N
        for j=1:c
            t(j)=P(j)*prob_density_value(X,m(:,j),S(:,:,j));
        end
    % Determining the maximum quantity Pi*p(x|wi)
    [~,z(i)]=max(t);
    end
end

%% Calculate the probability density value (using equation from page 30, class's slides ac_1_classifier_bayes_1.ppt)
function res = prob_density_value(X,m,S)
%     [b,~]=size(m);
%     res = 1/((2*pi)^(b/2)*det(S)^(1/2))*exp(-1/2*(X-m)*inv(S)*(X-m));
end


